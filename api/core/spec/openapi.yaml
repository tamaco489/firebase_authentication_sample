openapi: 3.0.0
info:
  title: core api
  description: use firebase authentication and redis server
  version: 1.0.0
servers:
  - url: http://localhost:{port}/core/
    description: dev
    variables:
      port:
        default: '8080'
  - url: https://api.<domain-name>/core/
    description: stg
security:
  - bearerAuth: []
paths:
  /v1/healthcheck:
    get:
      tags:
        - healthcheck
      summary: ヘルスチェックAPI
      description: APIが正常に動作しているかを確認します。
      operationId: healthcheck
      responses:
        '200':
          description: API is up and running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
      security: []
  /v1/users:
    post:
      tags:
        - v1
        - users
      summary: ユーザの新規登録API
      description: ユーザを新規登録します。
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: ユーザの新規登録が成功しました。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/AlreadyExists'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v1/users/me:
    get:
      tags:
        - v1
        - users
      summary: 自身のユーザ情報取得API
      description: 自身のユーザー情報を取得する
      operationId: getMe
      responses:
        '200':
          description: 自身のユーザ情報の取得に成功しました。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    HealthCheck:
      title: HealthCheck
      type: object
      description: HealthCheckのレスポンス
      required:
        - message
      properties:
        message:
          description: メッセージ。通常はok
          type: string
      example:
        message: ok
    CreateUserRequest:
      type: object
      required:
        - provider_type
      properties:
        provider_type:
          type: string
          description: 外部認証サービスの種別
          enum:
            - firebase
            - auth0
            - github
            - line
            - other
          example: firebase
    CreateUserResponse:
      title: CreateUser
      type: object
      description: ユーザ新規登録APIのレスポンス
      required:
        - uid
      properties:
        uid:
          description: uidを返却します。
          type: string
      example:
        uid: 123e4567-e89b-12d3-a456-426614174000
    Me:
      title: GetMe
      type: object
      description: 自身のユーザーID取得APIのレスポンス
      required:
        - uid
      properties:
        uid:
          description: uidを返却します。
          type: string
      example:
        uid: 123e4567-e89b-12d3-a456-426614174000
  responses:
    BadRequest:
      description: Bad Request
    Unauthorized:
      description: Unauthorized
    AlreadyExists:
      description: Already Exists
    InternalServerError:
      description: Internal Server Error
    NotFound:
      description: Not Found
