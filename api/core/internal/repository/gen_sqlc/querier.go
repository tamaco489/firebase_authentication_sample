// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package repository

import (
	"context"
)

type Querier interface {
	// ユーザーを作成する
	//
	//  INSERT INTO `users` (
	//    `id`,
	//    `username`,
	//    `email`,
	//    `role`,
	//    `status`,
	//    `last_login_at`
	//  ) VALUES (
	//    ?,
	//    ?,
	//    ?,
	//    ?,
	//    ?,
	//    ?
	//  )
	CreateUser(ctx context.Context, db DBTX, arg CreateUserParams) error
	// Firebase Authentication で認証したユーザを作成する
	//
	//  INSERT INTO `user_firebase_authentications` (
	//    `id`,
	//    `uid`
	//  ) VALUES (
	//    ?,
	//    ?
	//  )
	CreateUserFirebaseAuthentication(ctx context.Context, db DBTX, arg CreateUserFirebaseAuthenticationParams) error
	// uidを指定して対象のユーザ情報を取得する
	//
	//  SELECT
	//    `username`,
	//    `email`,
	//    `role`,
	//    `status`,
	//    `last_login_at`
	//  FROM `users` WHERE `id` = ?
	GetUserByID(ctx context.Context, db DBTX, id string) (GetUserByIDRow, error)
}

var _ Querier = (*Queries)(nil)
